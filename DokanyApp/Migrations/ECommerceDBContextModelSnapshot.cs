// <auto-generated />
using System;
using DokanyApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DokanyApp.Migrations
{
    [DbContext(typeof(ECommerceDBContext))]
    partial class ECommerceDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DokanyApp.Models.Admin", b =>
                {
                    b.Property<int>("AdminId");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("DokanyApp.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<int>("ShoppingCartId");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("TraderId");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("CartItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.HasIndex("TraderId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("DokanyApp.Models.Category", b =>
                {
                    b.Property<int>("CategoryId");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("DokanyApp.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId");

                    b.Property<string>("CreditCardInfo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserName");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DokanyApp.Models.CustomerService", b =>
                {
                    b.Property<int>("CustomerServiceId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FullName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CustomerServiceId");

                    b.ToTable("CustomerService");
                });

            modelBuilder.Entity("DokanyApp.Models.Order", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int>("OrderStatus");

                    b.Property<string>("OrderingStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ShippingId");

                    b.Property<int>("ShoppingCartIid")
                        .HasColumnName("ShoppingCartIId");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShippingId");

                    b.HasIndex("ShoppingCartIid");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DokanyApp.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailsId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("OrderDetailsId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DokanyApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<string>("BrandName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description")
                        .IsUnicode(false);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("ProductAppreciate")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DokanyApp.Models.ShippingInfo", b =>
                {
                    b.Property<int>("ShippingId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ShippingCost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ShippingType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ShippingId");

                    b.ToTable("ShippingInfo");
                });

            modelBuilder.Entity("DokanyApp.Models.ShoppingCart", b =>
                {
                    b.Property<int>("CartId");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity");

                    b.HasKey("CartId");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("DokanyApp.Models.Trader", b =>
                {
                    b.Property<int>("TraderId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserName");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("TraderId");

                    b.ToTable("Trader");
                });

            modelBuilder.Entity("DokanyApp.Models.CartItem", b =>
                {
                    b.HasOne("DokanyApp.Models.Product", "Product")
                        .WithMany("CartItem")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_CartItem_Product");

                    b.HasOne("DokanyApp.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("CartItem")
                        .HasForeignKey("ShoppingCartId")
                        .HasConstraintName("FK_CartItem_ShoppingCart");

                    b.HasOne("DokanyApp.Models.Trader", "Trader")
                        .WithMany("CartItem")
                        .HasForeignKey("TraderId")
                        .HasConstraintName("FK_CartItem_Trader");
                });

            modelBuilder.Entity("DokanyApp.Models.Order", b =>
                {
                    b.HasOne("DokanyApp.Models.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("CustomerOrder");

                    b.HasOne("DokanyApp.Models.ShippingInfo", "Shipping")
                        .WithMany("Order")
                        .HasForeignKey("ShippingId")
                        .HasConstraintName("FK_Order_ShippingInfo");

                    b.HasOne("DokanyApp.Models.ShoppingCart", "ShoppingCartI")
                        .WithMany("Order")
                        .HasForeignKey("ShoppingCartIid")
                        .HasConstraintName("FK_Order_ShoppingCart1");
                });

            modelBuilder.Entity("DokanyApp.Models.OrderDetails", b =>
                {
                    b.HasOne("DokanyApp.Models.Order", "OrderDetailsNavigation")
                        .WithOne("OrderDetails")
                        .HasForeignKey("DokanyApp.Models.OrderDetails", "OrderDetailsId")
                        .HasConstraintName("FK_OrderDetails_Order");

                    b.HasOne("DokanyApp.Models.Product", "OrderDetails1")
                        .WithOne("OrderDetails")
                        .HasForeignKey("DokanyApp.Models.OrderDetails", "OrderDetailsId")
                        .HasConstraintName("FK_OrderDetails_Product");
                });

            modelBuilder.Entity("DokanyApp.Models.Product", b =>
                {
                    b.HasOne("DokanyApp.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Product_Category");
                });

            modelBuilder.Entity("DokanyApp.Models.ShoppingCart", b =>
                {
                    b.HasOne("DokanyApp.Models.Customer", "Cart")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("DokanyApp.Models.ShoppingCart", "CartId")
                        .HasConstraintName("CustomerShoppingCart");
                });
#pragma warning restore 612, 618
        }
    }
}
